service: bizcard-backend
frameworkVersion: '3'

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 4000

provider:
  name: aws
  runtime: nodejs18.x
  timeout: 30
  environment:
    AWS_ACCESS_KEY_ID: AKIATPFKBFSE2DOYEP22
    AWS_SECRET_ACCESS_KEY: 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
    AWS_REGION: bc-dev-v1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - "bc-dev-v1"
            - "/*"

functions:
  auth:
    handler: ./handlers/auth.handler
    events:
      - http:
          path: /ping
          method: GET
          cors: true
      - http:
          path: /auth/signup
          method: POST
          cors: true
      - http:
          path: /auth/login
          method: POST
          cors: true
      - http:
          path: /auth/google
          method: GET
          cors: true
      - http:
          path: /auth/google/callback
          method: GET
          cors: true
      - http:
          path: /auth/facebook
          method: GET
          cors: true
      - http:
          path: /auth/facebook/callback
          method: GET
          cors: true
  token:
    handler: ./handlers/token.handler
    events:
      - http:
          path: /accessToken
          method: POST
          cors: true
  main:
    handler: ./handlers/main.handler
    events:
      - http:
          path: /config
          method: GET
          cors: true
      - http:
          path: /main
          method: GET
          cors: true
  user:
    handler: ./handlers/user.handler
    events:
      - http:
          path: /me
          method: PUT
          cors: true
  card:
    handler: ./handlers/card.handler
    events:
      - http:
          path: /card
          method: POST
          cors: true
      - http:
          path: /card
          method: PUT
          cors: true
      - http:
          path: /card-preview
          method: GET
          cors: true
      - http:
          path: /card
          method: GET
          cors: true
      - http:
          path: /user-cards
          method: GET
          cors: true
      - http:
          path: /card
          method: DELETE
          cors: true
  contact:
    handler: ./handlers/contact.handler
    events:
      - http:
          path: /contact
          method: POST
          cors: true
      - http:
          path: /contact
          method: GET
          cors: true
      - http:
          path: /user-contacts
          method: GET
          cors: true
      - http:
          path: /contact
          method: DELETE
          cors: true
  analytics:
    handler: ./handlers/analytics.handler
    events:
      - http:
          path: /analytics
          method: PUT
          cors: true
      - http:
          path: /analytics
          method: GET
          cors: true
  share:
    handler: ./handlers/share.handler
    events:
      - http:
          path: /app/p
          method: GET
          cors: true


